############################################################################
#
#  Program:         SuperLU_DIST
#
#  Module:          make.inc
#
#  Purpose:         Top-level Definitions
#
#  Creation date:   February 4, 1997  version 1.0
#
#  Modified:        November 11, 2002 (by Tom Oppe)
#		    November 1, 2007   version 2.1
#
############################################################################
#
#  The machine (platform) identifier to append to the library names
#
PLAT            = _sgi

#
#  The name of the libraries to be created/linked to
#
SuperLUroot 	= ${HOME}/Release_Codes/SuperLU_DIST_4.2
DSUPERLULIB     = $(SuperLUroot)/lib/libsuperlu_dist_4.2.a
INCLUDEDIR   	= $(SuperLUroot)/SRC
#
BLASDEF         = -DUSE_VENDOR_BLAS
BLASLIB         = -lscs
LAPACKLIB	= 
MPILIB		= -lmpi

############################################################################
## parmetis 4.x.x, 32-bit integer
PARMETIS_DIR	:= ${HOME}/Carver/lib/parmetis-4.0.3
## parmetis 4.x.x, 64-bit integer
# PARMETIS_DIR	:= ${HOME}/Carver/lib/parmetis-4.0.3_64

METISLIB := -L${PARMETIS_DIR}/build/Linux-x86_64/libmetis -lmetis
PARMETISLIB := -L${PARMETIS_DIR}/build/Linux-x86_64/libparmetis -lparmetis
I_PARMETIS := -I${PARMETIS_DIR}/include -I${PARMETIS_DIR}/metis/include
############################################################################

# Define the required Fortran libraries, if you use C compiler to link
FLIBS	 	= -lfortran

# Define all the libraries
#
LIBS            = $(DSUPERLULIB) $(BLASLIB) $(PARMETISLIB) $(METISLIB) \
		  $(LAPACKLIB) $(MPILIB) $(FLIBS)

#
#  The archiver and the flag(s) to use when building archive (library)
#  If your system has no ranlib, set RANLIB = echo.
#
ARCH            = ar
ARCHFLAGS       = crv
RANLIB          = touch

#######################################################################
# C compiler setup
CC              = cc
ISA             = -64 -mips4 -TARG:platform=ip35
# CFLAGS should be set to be the C flags that include optimization
CFLAGS          = $(ISA) $(I_PARMETIS) -O2
#
# NOOPTS should be set to be the C flags that turn off any optimization
# This must be enforced to compile the two routines: slamch.c and dlamch.c.
NOOPTS          = $(ISA) -O0
############################################################################
# FORTRAN compiler setup
FORTRAN         = f90
F90FLAGS        = $(CFLAGS)
############################################################################
LOADER          = cc
LOADOPTS        = $(CFLAGS)
#
############################################################################
#  C preprocessor defs for compilation (-DNoChange, -DAdd_, or -DUpCase)
#
#  Need follow the convention of how C calls a Fortran routine.
#
CDEFS        = -DAdd_ -DORIGIN
